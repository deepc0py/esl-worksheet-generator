"""Initial migration

Revision ID: fb3a5b216251
Revises: 
Create Date: 2025-02-15 23:42:38.174813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fb3a5b216251'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('professor',
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('professor_id')
    )
    op.create_table('student',
    sa.Column('profile_image_url', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('proficiency_level', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('student_id')
    )
    op.create_table('basicinformation',
    sa.Column('basic_info_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('native_language', sa.String(), nullable=False),
    sa.Column('current_address', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('basic_info_id')
    )
    op.create_table('class',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('semester', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('proficiency_level', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.professor_id'], ),
    sa.PrimaryKeyConstraint('class_id')
    )
    op.create_table('culturalelements',
    sa.Column('cultural_elements_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('cultural_background', sa.String(), nullable=False),
    sa.Column('traditions', sa.String(), nullable=False),
    sa.Column('value_systems', sa.String(), nullable=False),
    sa.Column('cultural_practices', sa.String(), nullable=False),
    sa.Column('dietary_preferences', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('cultural_elements_id')
    )
    op.create_table('interesthobby',
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('interest_id')
    )
    op.create_table('learningcontext',
    sa.Column('learning_context_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('learning_goals', sa.String(), nullable=False),
    sa.Column('preferred_learning_style', sa.String(), nullable=False),
    sa.Column('previous_language_experience', sa.String(), nullable=False),
    sa.Column('challenges', sa.String(), nullable=False),
    sa.Column('strengths', sa.String(), nullable=False),
    sa.Column('areas_for_improvement', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('learning_context_id')
    )
    op.create_table('personalbackground',
    sa.Column('personal_background_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('hometown', sa.String(), nullable=False),
    sa.Column('country_of_origin', sa.String(), nullable=False),
    sa.Column('family_background', sa.String(), nullable=False),
    sa.Column('life_experiences', sa.String(), nullable=False),
    sa.Column('personal_goals', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('personal_background_id')
    )
    op.create_table('professionalbackground',
    sa.Column('prof_background_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('current_occupation', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('industry', sa.String(), nullable=False),
    sa.Column('work_responsibilities', sa.String(), nullable=False),
    sa.Column('years_of_experience', sa.Integer(), nullable=False),
    sa.Column('education_level', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('prof_background_id')
    )
    op.create_table('socialaspects',
    sa.Column('social_aspects_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('communication_style', sa.String(), nullable=False),
    sa.Column('group_work_preference', sa.String(), nullable=False),
    sa.Column('social_interests', sa.String(), nullable=False),
    sa.Column('community_involvement', sa.String(), nullable=False),
    sa.Column('interaction_preferences', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('social_aspects_id')
    )
    op.create_table('activitytemplate',
    sa.Column('base_conversation_template', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('objective', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.class_id'], ),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('homeworktemplate',
    sa.Column('base_questions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('objective', sa.String(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.class_id'], ),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('interviewtemplate',
    sa.Column('questions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('template_name', sa.String(), nullable=False),
    sa.Column('instructions', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.class_id'], ),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('studentclass',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('enrollment_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.class_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('student_id', 'class_id')
    )
    op.create_table('activitygroup',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('activity_template_id', sa.Integer(), nullable=False),
    sa.Column('student_id_1', sa.Integer(), nullable=False),
    sa.Column('student_id_2', sa.Integer(), nullable=False),
    sa.Column('completion_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['activity_template_id'], ['activitytemplate.template_id'], ),
    sa.ForeignKeyConstraint(['student_id_1'], ['student.student_id'], ),
    sa.ForeignKeyConstraint(['student_id_2'], ['student.student_id'], ),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('interview',
    sa.Column('parsed_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('interview_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('interview_date', sa.Date(), nullable=False),
    sa.Column('transcript', sa.String(), nullable=False),
    sa.Column('interview_status', sa.String(), nullable=False),
    sa.Column('parsing_status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.class_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['interviewtemplate.template_id'], ),
    sa.PrimaryKeyConstraint('interview_id')
    )
    op.create_table('personalizedactivity',
    sa.Column('personalized_conversation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('generation_status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['activitytemplate.template_id'], ),
    sa.PrimaryKeyConstraint('activity_id')
    )
    op.create_table('personalizedhomework',
    sa.Column('personalized_questions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('homework_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('generation_status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['homeworktemplate.template_id'], ),
    sa.PrimaryKeyConstraint('homework_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('personalizedhomework')
    op.drop_table('personalizedactivity')
    op.drop_table('interview')
    op.drop_table('activitygroup')
    op.drop_table('studentclass')
    op.drop_table('interviewtemplate')
    op.drop_table('homeworktemplate')
    op.drop_table('activitytemplate')
    op.drop_table('socialaspects')
    op.drop_table('professionalbackground')
    op.drop_table('personalbackground')
    op.drop_table('learningcontext')
    op.drop_table('interesthobby')
    op.drop_table('culturalelements')
    op.drop_table('class')
    op.drop_table('basicinformation')
    op.drop_table('student')
    op.drop_table('professor')
    # ### end Alembic commands ###
